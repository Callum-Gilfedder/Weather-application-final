{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callu\\\\Documents\\\\GitHub\\\\Weather-Application\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherApp() {\n  _s();\n  const [responseData, setResponseData] = useState(null);\n  const [currentWeatherData, setCurrentWeatherData] = useState(null);\n  const [userInput, setUserInput] = useState(\"\");\n  useEffect(() => {\n    // Define the API URL\n    const apiUrl = 'https://wttr.in/?format=j1';\n\n    // Fetch weather data using Axios\n    axios.get(apiUrl).then(response => {\n      setResponseData(response.data);\n      const simplifiedData = extractWeatherData(response.data);\n      setCurrentWeatherData(simplifiedData.current_weather);\n    }).catch(error => {\n      console.error('Error fetching weather data:', error);\n    });\n  }, []);\n  console.log(responseData);\n  function handleChange(event) {\n    setUserInput(event.target.value);\n  }\n\n  // Function to extract relevant information\n  function extractWeatherData(rawData) {\n    const weather = {\n      current_weather: {\n        location: rawData.nearest_area[0].areaName[0].value,\n        weatherDescription: rawData.current_condition[0].weatherDesc[0].value,\n        temperature: rawData.current_condition[0].temp_C,\n        precipitation: rawData.current_condition[0].precipMM,\n        humidity: rawData.current_condition[0].humidity,\n        windSpeed: rawData.current_condition[0].windspeedKmph\n      },\n      weatherForDatePlusOne: {\n        location: null,\n        temperature: null,\n        precipitation: null,\n        humidity: null,\n        windSpeed: null\n      },\n      weatherForDatePlusTwo: {\n        location: null,\n        temperature: null,\n        precipitation: null,\n        humidity: null,\n        windSpeed: null\n      },\n      weatherForDatePlusThree: {\n        location: null,\n        temperature: null,\n        precipitation: null,\n        humidity: null,\n        windSpeed: null\n      }\n    };\n    return weather;\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User input: \", userInput]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), currentWeatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Current Weather Condition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", currentWeatherData.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather description: \", currentWeatherData.weatherDescription]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", currentWeatherData.temperature, \" degrees C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Precipitation: \", currentWeatherData.precipitation, \"mm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", currentWeatherData.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", currentWeatherData.windSpeed, \"km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather forecasts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherApp, \"oi8tyBEj/oPzqxHufEB9U6YpMj8=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WeatherApp","_s","responseData","setResponseData","currentWeatherData","setCurrentWeatherData","userInput","setUserInput","apiUrl","get","then","response","data","simplifiedData","extractWeatherData","current_weather","catch","error","console","log","handleChange","event","target","value","rawData","weather","location","nearest_area","areaName","weatherDescription","current_condition","weatherDesc","temperature","temp_C","precipitation","precipMM","humidity","windSpeed","windspeedKmph","weatherForDatePlusOne","weatherForDatePlusTwo","weatherForDatePlusThree","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/callu/Documents/GitHub/Weather-Application/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction WeatherApp() {\n  const [responseData, setResponseData] = useState(null);\n  const [currentWeatherData, setCurrentWeatherData] = useState(null);\n\n  const [userInput, setUserInput] = useState(\"\");\n\n  useEffect(() => {\n    // Define the API URL\n    const apiUrl = 'https://wttr.in/?format=j1';\n\n    // Fetch weather data using Axios\n    axios.get(apiUrl)\n      .then(response => {\n        setResponseData(response.data)\n        const simplifiedData = extractWeatherData(response.data);\n        setCurrentWeatherData(simplifiedData.current_weather);\n      })\n      .catch(error => {\n        console.error('Error fetching weather data:', error);\n      });\n  }, []);\n\n  console.log(responseData)\n\n  function handleChange(event) {\n    setUserInput(event.target.value)\n  }\n\n  // Function to extract relevant information\n  function extractWeatherData(rawData) { \n    \n    const weather = {\n        current_weather : {\n          location: rawData.nearest_area[0].areaName[0].value,\n          weatherDescription: rawData.current_condition[0].weatherDesc[0].value,\n          temperature: rawData.current_condition[0].temp_C,\n          precipitation: rawData.current_condition[0].precipMM,\n          humidity: rawData.current_condition[0].humidity,\n          windSpeed: rawData.current_condition[0].windspeedKmph},\n          \n        weatherForDatePlusOne: {\n          location: null,\n          temperature: null,\n          precipitation: null,\n          humidity: null, \n          windSpeed: null, \n        },\n\n        weatherForDatePlusTwo: {\n          location: null,\n          temperature: null,\n          precipitation: null,\n          humidity: null, \n          windSpeed: null, \n        },\n\n        weatherForDatePlusThree: {\n          location: null,\n          temperature: null,\n          precipitation: null,\n          humidity: null, \n          windSpeed: null, \n        },\n      }\n\n    return weather\n    ;\n  };\n\n  return (\n    <div>\n      <h1>Weather Data</h1>\n      <input type=\"text\" onChange={handleChange}></input>\n      <h1>User input: {userInput}</h1>\n      {/* Display simplified weather data */}\n      {currentWeatherData && (\n        <div>\n          <h1>Current Weather Condition</h1>\n            <p>Location: {currentWeatherData.location}</p>          \n            <p>Weather description: {currentWeatherData.weatherDescription}</p>\n            <p>Temperature: {currentWeatherData.temperature} degrees C</p>\n            <p>Precipitation: {currentWeatherData.precipitation}mm</p>\n            <p>Humidity: {currentWeatherData.humidity}%</p>\n            <p>Wind Speed: {currentWeatherData.windSpeed}km/h</p>\n\n\n          <h1>Weather forecasts</h1>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WeatherApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}